@using System.Web.Configuration;
@model WebUI.Models.EditProfileViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit profile</h2>

@using (Html.BeginForm("Edit", "Profile", new { action = "update" }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.AvatarPath)

    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            <div class="col-md-2">
                <img id="avatar" src="@Model.AvatarPath" class="img-circle avatarBig" alt="avatar" />
            </div>
            <div class="upload-avatar col-md-10">
                <p><b>Upload new avatar</b></p>
                <input id="upload" type="file" name="Avatar" class="brouse-btn" accept="image/*" onChange="readURL(this)"/>
                <p>The maximum file size allowed is 225KB</p>
                @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                <br />
                @if (Model.AvatarPath != WebConfigurationManager.AppSettings["DefaultAvatar"])
                {
                    <button type='submit' name='action' value='removeAvatar'>Remove avatar</button>
                }                   
            </div>         
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ValueFor(model => model.Email)    
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type='submit' name='action' value='update' class='btn btn-success'>Update profile settings</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Change your password", "ChangePassword", "Manage")
</div>

<script>
    function readURL(input) {
        var ext = input.files[0]['name'].substring(input.files[0]['name'].lastIndexOf('.') + 1).toLowerCase();

        if (input.files && input.files[0] && (ext == "gif" || ext == "png" || ext == "jpeg" || ext == "jpg")) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#avatar').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
        else {
            alert('The selected file is not an image')
            input.value = null;
        }
    }
</script>